# Generated by Django 2.2.4 on 2019-08-18 01:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ListMacHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('mac', models.CharField(default='', max_length=17)),
                ('port', models.SmallIntegerField()),
                ('vlan', models.SmallIntegerField()),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
                ('data', models.DateTimeField()),
            ],
            options={
                'db_table': 'listmachistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('dns', models.CharField(max_length=30)),
                ('ip', models.CharField(max_length=15)),
                ('mac', models.CharField(max_length=17, primary_key=True, serialize=False, unique=True)),
                ('hrdesc', models.CharField(max_length=180)),
                ('name', models.CharField(max_length=80)),
                ('serial', models.CharField(max_length=30)),
                ('brand', models.CharField(max_length=180)),
            ],
            options={
                'db_table': 'printer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Surveillance',
            fields=[
                ('mac', models.CharField(max_length=17, primary_key=True, serialize=False, unique=True)),
                ('type', models.TextField(db_column='type')),
                ('ip', models.CharField(max_length=15)),
                ('comments', models.TextField()),
                ('name', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'surveillance',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Switches',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('alias', models.CharField(max_length=7)),
                ('mac', models.CharField(max_length=17, unique=True)),
                ('ip', models.CharField(max_length=39)),
                ('model', models.CharField(blank=True, max_length=60, null=True)),
                ('serial_number', models.CharField(max_length=40, unique=True)),
                ('status', models.TextField(choices=[('active', 'active'), ('stored', 'stored '), ('discarded', 'discarded'), ('repair', 'repair'), ('inactive_script', 'inactive_script')])),
                ('vendor', models.CharField(blank=True, max_length=30, null=True)),
                ('soft_version', models.CharField(blank=True, max_length=80, null=True)),
                ('stp_root', models.SmallIntegerField(blank=True, null=True)),
                ('community_ro', models.CharField(max_length=20)),
                ('community_rw', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'switches',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Voip',
            fields=[
                ('branch', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('display', models.CharField(max_length=40)),
                ('depto', models.CharField(max_length=80)),
                ('ip', models.CharField(max_length=15)),
                ('mac', models.CharField(max_length=17, unique=True)),
            ],
            options={
                'db_table': 'voip',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Wifi',
            fields=[
                ('mac', models.CharField(max_length=17, primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=15)),
                ('ip6', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=20)),
                ('optionv4', models.TextField()),
                ('optionv6', models.TextField()),
                ('comments', models.TextField()),
            ],
            options={
                'db_table': 'wifi',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SwitchesNeighbors',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('mac1', models.CharField(max_length=17)),
                ('port1', models.SmallIntegerField()),
                ('mac2', models.CharField(max_length=17)),
                ('port2', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'switches_neighbors',
                'managed': True,
                'unique_together': {('mac1', 'port1', 'mac2')},
            },
        ),
        migrations.CreateModel(
            name='Ipv6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip6', models.CharField(max_length=50)),
                ('mac', models.CharField(max_length=17)),
            ],
            options={
                'db_table': 'ipv6',
                'managed': True,
                'unique_together': {('ip6', 'mac')},
            },
        ),
        migrations.CreateModel(
            name='SwitchesPorts',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('port', models.SmallIntegerField()),
                ('speed', models.IntegerField()),
                ('duplex', models.SmallIntegerField()),
                ('admin', models.SmallIntegerField()),
                ('oper', models.SmallIntegerField()),
                ('lastchange', models.BigIntegerField()),
                ('discards_in', models.BigIntegerField()),
                ('discards_out', models.BigIntegerField()),
                ('stp_admin', models.SmallIntegerField()),
                ('stp_state', models.SmallIntegerField()),
                ('poe_admin', models.SmallIntegerField()),
                ('poe_detection', models.SmallIntegerField()),
                ('poe_class', models.SmallIntegerField()),
                ('poe_mpower', models.SmallIntegerField()),
                ('mac_count', models.SmallIntegerField()),
                ('pvid', models.SmallIntegerField()),
                ('port_tagged', models.CharField(max_length=2000)),
                ('port_untagged', models.CharField(max_length=80)),
                ('data', models.DateTimeField()),
                ('name', models.CharField(max_length=30)),
                ('alias', models.CharField(max_length=80)),
                ('oct_in', models.BigIntegerField()),
                ('oct_out', models.BigIntegerField()),
                ('switch', models.ForeignKey(db_column='switch', default=0, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ports', to='netstatus.Switches')),
            ],
            options={
                'db_table': 'switches_ports',
                'managed': True,
                'unique_together': {('switch', 'port')},
            },
        ),
        migrations.CreateModel(
            name='Mac',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('mac', models.CharField(default='', max_length=17)),
                ('port', models.SmallIntegerField()),
                ('vlan', models.SmallIntegerField()),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
                ('data', models.DateTimeField()),
                ('switch', models.ForeignKey(db_column='switch', default=0, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mac_switch', to='netstatus.Switches')),
            ],
            options={
                'db_table': 'mac',
                'managed': True,
                'unique_together': {('switch', 'mac', 'vlan')},
            },
        ),
    ]
